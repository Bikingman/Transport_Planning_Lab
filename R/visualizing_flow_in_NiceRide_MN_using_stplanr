library(sp)
library(stplanr)
library(rgdal)
library(tmap)

#interactive mode
tmap_mode("view")

#bring in GraphHopper API key 
fileName <- "D:\\Bike Share Analysis\\R Code\\graphhopper.txt"
mytoken <- readChar(fileName, file.info(fileName)$size)
Sys.setenv(GRAPHHOPPER = mytoken)

#load data
setwd("D:\\Bike Share Analysis\\Nice_ride_data_2017_season\\Nice_ride_data_2017_season")
cents <- readOGR(dsn = ".", layer = "nice_ride_location_2017_WGS84") # this file was generated by converting the original location into a shapefile
bike_share_hires <- read.csv("Nice_ride_trip_history_2017_season.csv", sep = ",", header = T) 

#generate number of hires variable and aggregate 
bike_share_hires$hire <- 1 
flow <- aggregate(hire ~ Start.station.number + End.station.number, data = bike_share_hires, FUN = sum)

#remove NRHQ locations 
ind <- which(with( flow, End.station.number == "NRHQ" | Start.station.number == "NRHQ" )) # remove NRHQ bc no coordinates for location 
ind # make sure 
f <- flow[ -ind, ] # remove from flow 

#visualize station locations 
qtm(cents, symbols.size = .5)

#visualize first trip as the crow flies
flow_single_line = flow[4,] # select only the first line
desire_line_single = od2line(flow = flow_single_line, zones = cents)
qtm(desire_line_single, lines.lwd = 5)

#connect flows with station locations
l = od2line(flow = f, zones = cents)

#remove looped trips
sel = l$Start.station.number == l$End.station.number
l = l[!sel, ]

#visualise crow flies 
qtm(l, lines.lwd = "hire", scale = 4)

#fancier crow flies plot
tm_shape(l) + tm_lines(lwd = "hire", scale = 10, col = "hire", style = "jenks")

#visualize 4th quartile
quantile(l$hire)
n <- 19
ls <- subset(l, hire >= 19 )
tm_shape(ls) + tm_lines(lwd = "hire", scale = 10, col = "hire", style = "jenks")

#generate route information with GraphHopper
r = line2route(l = l, route_fun = "route_graphhopper", vehicle = "bike")

#bind data
r@data = cbind(r@data, l@data)

#visualize routes 
tm_shape(r) + tm_lines(lwd = "hire", col = "dodgerblue1")

#Write ESRI shapefile
writeOGR(r, ".", "total_routes_shape", driver="ESRI Shapefile")
