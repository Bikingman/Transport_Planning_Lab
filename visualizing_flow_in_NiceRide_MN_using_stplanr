

#visualizing flow of the Twin City Bike Share in R using stplanr


#thank you to the stplanr team for making this package aviable, and thank you Prof David McArthur at UoG for showing my this work  
#https://cran.r-project.org/web/packages/stplanr/vignettes/introducing-stplanr.html
#https://cran.r-project.org/web/packages/stplanr/stplanr.pdf


#create desire lines 
library(sp)
library(stplanr)
library(maptools)
library(rgdal)
library(tmap)
library(foreign)
library(osrm)

#worfflow 
#import a map 
#aggregate hires, eliminate trash 
#attach coordinates 
#generate text files for each route along osm links 
#split each link in string of text and add another colomn with number of hires 
#aggreagate number of hires per road link 
#export 



fileName <- "D:\\Bike Share Analysis\\R Code\\graphhopper.txt"
mytoken <- readChar(fileName, file.info(fileName)$size)
Sys.setenv(GRAPHHOPPER = mytoken)

tmap_mode("view")


fileName <- "D:\\Bike Share Analysis\\R Code\\transportAPI.txt"
mytoken <- readChar(fileName, file.info(fileName)$size)
Sys.setenv(transportAPI = mytoken)


#1. import map 
#setwd("D:\\Bike Share Analysis\\MN data\\minneapolis-saint-paul_minnesota.imposm-shapefiles")
#network <- readOGR(dsn = ".", layer = "minneapolis-saint-paul-city-center-roads")

#2.b attach coordinates 
#setwd("D:\\Bike Share Analysis\\Nice_ride_data_2015_season\\Nice_ride_data_2015_season\\location_data")
#locations <- read.dbf("location_sf.dbf")


setwd("D:\\Bike Share Analysis\\Nice_ride_data_2015_season\\Nice_ride_data_2015_season\\location_data")
cents <- readOGR(dsn = ".", layer = "nice_ride_station_locations1") # this file was generated by converting the original location into a shapefile

setwd("D:\\Bike Share Analysis\\Nice_ride_data_2015_season\\Nice_ride_data_2015_season")
bike_share_hires <- read.csv("Nice_ride_trip_history_2015_season.csv", sep = ",", header = T) 


bike_share_hires$hire <- 1 # add a number to aggregate
flow <- aggregate(hire ~ Start.station.number + End.station.number, data = bike_share_hires, FUN = sum)
ind <- which(with( flow, End.station.number == "NRHQ" | Start.station.number == "NRHQ" )) # remove NRHQ bc no coordinates for location 
ind # make sure 
f <- flow[ -ind, ] # remove from flow 

qtm(cents, symbols.size = .5)
flow_single_line = flow[4,] # select only the first line
desire_line_single = od2line(flow = flow_single_line, zones = cents)
qtm(desire_line_single, lines.lwd = 5)

l = od2line(flow = f, zones = cents)
sel = l$Start.station.number == l$End.station.number
l = l[!sel, ]
qtm(l, lines.lwd = "hire", scale = 2)

curl::has_internet()
  
r = line2route(l, route_fun = route_graphhopper, vehicle = "bike)

r@data = cbind(r@data, l@data)
tm_shape(r) + tm_lines(lwd = "hire", scale = 3, col = "dodgerblue1")

