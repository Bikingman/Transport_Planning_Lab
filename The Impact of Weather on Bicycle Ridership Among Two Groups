setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper")
main <- read.csv("main_bike_counter_data.csv", sep=',', header = T)


##############this section is concerend with preparing the hourly bike count data for each counter. 
#import bike count data and create vectors: year, month, day (consecutive), sum counts
#add edge_id to connect with strava data

#setwd
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\Bike Count Automatic Counters\\Final Counters")

library(lubridate)
library(timeDate)
library(plyr)
library(ggplot2)
library(MASS)
###Portobello

#get data from last section 
Port_Bike<- read.csv("20portobellopromeast.csv", sep=',', header=T)
#format into POSlt
Port_Bike$date <- format(lubridate::dmy(Port_Bike$date),"%d/%m/%Y")
#set time
Port_Bike$date <- strptime(Port_Bike$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
Port_Bike$year <- year(as.POSIXlt(Port_Bike$date, format="%d/%m/%Y"))
#month vector 
Port_Bike$month <- month(as.POSIXlt(Port_Bike$date, format="%d/%m/%Y"))
# day vector 
Port_Bike$day <- yday(as.POSIXlt(Port_Bike$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(Port_Bike)[colnames(Port_Bike) == 'time'] <- 'hour'
#add total count
Port_Bike$count <- Port_Bike$channel_1 + Port_Bike$channel_2
#wrtie in first edge id to connect with merged strava data set later one
#create edge ID
Port_Bike$edge_id <- rep("373370", nrow(Port_Bike))
#check counts 
Portobello_plot <- subset(Port_Bike, day >= 182 & day <= 365 & year == 2015)
plot(Portobello_plot$day, Portobello_plot$count, xlab = "day", ylab= "count")
title("Porobello")
dim(Portobello_plot)

#due to dim, porto not inlcuded 

###Morrison
#get data from last section 
Morrison <- read.csv("21morrisonstreet.csv", sep=',', header=T)
#format into POSlt
Morrison$date <- format(lubridate::dmy(Morrison$date),"%d/%m/%Y")
#set time
Morrison$date <- strptime(Morrison$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
Morrison$year <- year(as.POSIXlt(Morrison$date, format="%d/%m/%Y"))
#month vector 
Morrison$month <- month(as.POSIXlt(Morrison$date, format="%d/%m/%Y"))
# day vector 
Morrison$day <- yday(as.POSIXlt(Morrison$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(Morrison)[colnames(Morrison) == 'time'] <- 'hour'
#add total count
Morrison$count <- Morrison$channel_1 + Morrison$channel_2
#wrtie in first edge id to connect with merged strava data set later one
#create edge ID
Morrison$edge_id <- rep("590479", nrow(Morrison))
#check counts 
Morrison_plots <- subset(Morrison, day >= 182 & day <= 365 & year == 2015)
plot(Morrison_plots$day, Morrison_plots$count, xlab = "day", ylab= "count")
title("Morrison")
dim(Morrison_plots)

########morrison will be omited



###NMWE1
#get data from last section 
NMWE1 <- read.csv("22northmeadowwalkeast1.csv", sep=',', header=T)
#format into POSlt
NMWE1$date <- format(lubridate::dmy(NMWE1$date),"%d/%m/%Y")
#set time
NMWE1$date <- strptime(NMWE1$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
NMWE1$year <- year(as.POSIXlt(NMWE1$date, format="%d/%m/%Y"))
#month vector 
NMWE1$month <- month(as.POSIXlt(NMWE1$date, format="%d/%m/%Y"))
# day vector 
NMWE1$day <- yday(as.POSIXlt(NMWE1$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(NMWE1)[colnames(NMWE1) == 'time'] <- 'hour'
#add total count
NMWE1$count <- NMWE1$channel_1 + NMWE1$channel_2
#create edge ID
NMWE1$edge_id <- rep("115553", nrow(NMWE1))
#check data
NMWE1_plot <- subset(NMWE1, day >= 182 & day <= 365 & year == 2015)
plot(NMWE1_plot$day, NMWE1_plot$count, xlab = "day", ylab= "count")
title("NorthMeadowWalkE")
dim(NMWE1_plot)



###RoseburnPark
#get data from last section 
RoseburnPark <- read.csv("24roseburnpark.csv", sep=',', header=T)
#format into POSlt
RoseburnPark$date <- format(lubridate::dmy(RoseburnPark$date),"%d/%m/%Y")
#set time
RoseburnPark$date <- strptime(RoseburnPark$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
RoseburnPark$year <- year(as.POSIXlt(RoseburnPark$date, format="%d/%m/%Y"))
#month vector 
RoseburnPark$month <- month(as.POSIXlt(RoseburnPark$date, format="%d/%m/%Y"))
# day vector 
RoseburnPark$day <- yday(as.POSIXlt(RoseburnPark$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(RoseburnPark)[colnames(RoseburnPark) == 'time'] <- 'hour'
#add total count
RoseburnPark$count <- RoseburnPark$channel_1 + RoseburnPark$channel_2
#create edge ID
RoseburnPark$edge_id <- rep("82456", nrow(RoseburnPark))
#check data
Roseburn_plot <- subset(RoseburnPark, day >= 182 & day <= 365 & year == 2015)
plot(Roseburn_plot$day, Roseburn_plot$count, xlab = "day", ylab= "count")
title("RoseburnPark")
dim(Roseburn_plot)

###StraitonPath
#get data from last section 
StraitonPath <- read.csv("25straitonpath.csv", sep=',', header=T)
#format into POSlt
StraitonPath$date <- format(lubridate::dmy(StraitonPath$date),"%d/%m/%Y")
#set time
StraitonPath$date <- strptime(StraitonPath$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
StraitonPath$year <- year(as.POSIXlt(StraitonPath$date, format="%d/%m/%Y"))
#month vector 
StraitonPath$month <- month(as.POSIXlt(StraitonPath$date, format="%d/%m/%Y"))
# day vector 
StraitonPath$day <- yday(as.POSIXlt(StraitonPath$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(StraitonPath)[colnames(StraitonPath) == 'time'] <- 'hour'
#add total count
StraitonPath$count <- StraitonPath$channel_1 + StraitonPath$channel_2
#create edge ID
StraitonPath$edge_id <- rep("370062", nrow(StraitonPath))
#check data
StraitonPath_plot <- subset(StraitonPath, day >= 182 & day <= 365 & year == 2015)
plot(StraitonPath_plot$day, StraitonPath_plot$count, xlab = "day", ylab= "count")
title("StraitonPath")
dim(StraitonPath_plot)

###StenhouseDrive
#get data from last section 
StenhouseDrive <- read.csv("26stenhousedrive.csv", sep=',', header=T)
#format into POSlt
StenhouseDrive$date <- format(lubridate::dmy(StenhouseDrive$date),"%d/%m/%Y")
#set time
StenhouseDrive$date <- strptime(StenhouseDrive$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
StenhouseDrive$year <- year(as.POSIXlt(StenhouseDrive$date, format="%d/%m/%Y"))
#month vector 
StenhouseDrive$month <- month(as.POSIXlt(StenhouseDrive$date, format="%d/%m/%Y"))
# day vector 
StenhouseDrive$day <- yday(as.POSIXlt(StenhouseDrive$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(StenhouseDrive)[colnames(StenhouseDrive) == 'time'] <- 'hour'
#add total count
StenhouseDrive$count <- StenhouseDrive$channel_1 + StenhouseDrive$channel_2
#create edge ID
StenhouseDrive$edge_id <- rep("10318", nrow(StenhouseDrive))
#check data
StenhouseDrive_plot <- subset(StenhouseDrive, day >= 182 & day <= 365 & year == 2015)
plot(StenhouseDrive_plot$day, StenhouseDrive_plot$count, xlab = "day", ylab= "count")
title("StenhouseDrive")
dim(StenhouseDrive_plot)

###HarrisonPark
#get data from last section 
HarrisonPark <- read.csv("27harrisonpark.csv", sep=',', header=T)
#format into POSlt
HarrisonPark$date <- format(lubridate::dmy(HarrisonPark$date),"%d/%m/%Y")
#set time
HarrisonPark$date <- strptime(HarrisonPark$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
HarrisonPark$year <- year(as.POSIXlt(HarrisonPark$date, format="%d/%m/%Y"))
#month vector 
HarrisonPark$month <- month(as.POSIXlt(HarrisonPark$date, format="%d/%m/%Y"))
# day vector 
HarrisonPark$day <- yday(as.POSIXlt(HarrisonPark$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(HarrisonPark)[colnames(HarrisonPark) == 'time'] <- 'hour'
#add total count
HarrisonPark$count <- HarrisonPark$channel_1 + HarrisonPark$channel_2
#create edge ID
HarrisonPark$edge_id <- rep("27280", nrow(HarrisonPark))
#check data
HarrisonPark_plot <- subset(HarrisonPark, day >= 182 & day <= 365 & year == 2015)
plot(HarrisonPark_plot$day, HarrisonPark_plot$count, xlab = "day", ylab= "count")
title("HarrisonPark")
dim(HarrisonPark_plot)

###RST
#get data from last section 
RST <- read.csv("28rodneystreettunnel.csv", sep=',', header=T)
#format into POSlt
RST$date <- format(lubridate::dmy(RST$date),"%d/%m/%Y")
#set time
RST$date <- strptime(RST$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
RST$year <- year(as.POSIXlt(RST$date, format="%d/%m/%Y"))
#month vector 
RST$month <- month(as.POSIXlt(RST$date, format="%d/%m/%Y"))
# day vector 
RST$day <- yday(as.POSIXlt(RST$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(RST)[colnames(RST) == 'time'] <- 'hour'
#add total count
RST$count <- RST$channel_1 + RST$channel_2
#wrtie in first edge id to connect with merged strava data set later one
#create edge ID
RST$edge_id <- rep("20832", nrow(RST))
#check data
RST_plot <- subset(RST, day >= 182 & day <= 365 & year == 2015)
plot(RST_plot$day, RST_plot$count, xlab = "day", ylab= "count")
title("RodneyStreetTunnel")
dim(RST_plot)

###CorstorphineRoad
#get data from last section 
CorstorphineRoad <- read.csv("29corstorphineroad.csv", sep=',', header=T)
#format into POSlt
CorstorphineRoad$date <- format(lubridate::dmy(CorstorphineRoad$date),"%d/%m/%Y")
#set time
CorstorphineRoad$date <- strptime(CorstorphineRoad$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
CorstorphineRoad$year <- year(as.POSIXlt(CorstorphineRoad$date, format="%d/%m/%Y"))
#month vector 
CorstorphineRoad$month <- month(as.POSIXlt(CorstorphineRoad$date, format="%d/%m/%Y"))
# day vector 
CorstorphineRoad$day <- yday(as.POSIXlt(CorstorphineRoad$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(CorstorphineRoad)[colnames(CorstorphineRoad) == 'time'] <- 'hour'
#add total count
CorstorphineRoad$count <- CorstorphineRoad$channel_1 + CorstorphineRoad$channel_2
#create edge ID
CorstorphineRoad$edge_id <- rep("3754", nrow(CorstorphineRoad))
#check data
CorstorphineRoad_plot <- subset(CorstorphineRoad, day >= 182 & day <= 365 & year == 2015)
plot(CorstorphineRoad_plot$day, CorstorphineRoad_plot$count, xlab = "day", ylab= "count")
title("CorstorphineRoad")
dim(CorstorphineRoad_plot)


###DalryRoad
#get data from last section 
DalryRoad <- read.csv("30dalryroad.csv", sep=',', header=T)
#format into POSlt
DalryRoad$date <- format(lubridate::dmy(DalryRoad$date),"%d/%m/%Y")
#set time
DalryRoad$date <- strptime(DalryRoad$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
DalryRoad$year <- year(as.POSIXlt(DalryRoad$date, format="%d/%m/%Y"))
#month vector 
DalryRoad$month <- month(as.POSIXlt(DalryRoad$date, format="%d/%m/%Y"))
# day vector 
DalryRoad$day <- yday(as.POSIXlt(DalryRoad$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(DalryRoad)[colnames(DalryRoad) == 'time'] <- 'hour'
#add total count
DalryRoad$count <- DalryRoad$channel_1 + DalryRoad$channel_2
#create edge ID
DalryRoad$edge_id <- rep("736121", nrow(DalryRoad))
#check data
DalryRoad_plot <- subset(DalryRoad, day >= 182 & day <= 365 & year == 2015)
plot(DalryRoad_plot$day, DalryRoad_plot$count, xlab = "day", ylab= "count")
title("DalryRoad")
dim(DalryRoad_plot)

###DundeeStreet
#get data from last section 
DundeeStreet <- read.csv("31dundeestreet.csv", sep=',', header=T)
#format into POSlt
DundeeStreet$date <- format(lubridate::dmy(DundeeStreet$date),"%d/%m/%Y")
#set time
DundeeStreet$date <- strptime(DundeeStreet$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
DundeeStreet$year <- year(as.POSIXlt(DundeeStreet$date, format="%d/%m/%Y"))
#month vector 
DundeeStreet$month <- month(as.POSIXlt(DundeeStreet$date, format="%d/%m/%Y"))
# day vector 
DundeeStreet$day <- yday(as.POSIXlt(DundeeStreet$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(DundeeStreet)[colnames(DundeeStreet) == 'time'] <- 'hour'
#add total count
DundeeStreet$count <- DundeeStreet$channel_1 + DundeeStreet$channel_2
#create edge ID
DundeeStreet$edge_id <- rep("242196", nrow(DundeeStreet))
#check data
DundeeStreet_plot <- subset(DundeeStreet, day >= 182 & day <= 365 & year == 2015)
plot(DundeeStreet_plot$day, DundeeStreet_plot$count, xlab = "day", ylab= "count")
title("DundeeStreet")
dim(DundeeStreet_plot)

###InverleithRow
#get data from last section 
InverleithRow <- read.csv("32inverleithrow.csv", sep=',', header=T)
#format into POSlt
InverleithRow$date <- format(lubridate::dmy(InverleithRow$date),"%d/%m/%Y")
#set time
InverleithRow$date <- strptime(InverleithRow$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
InverleithRow$year <- year(as.POSIXlt(InverleithRow$date, format="%d/%m/%Y"))
#month vector 
InverleithRow$month <- month(as.POSIXlt(InverleithRow$date, format="%d/%m/%Y"))
# day vector 
InverleithRow$day <- yday(as.POSIXlt(InverleithRow$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(InverleithRow)[colnames(InverleithRow) == 'time'] <- 'hour'
#add total count
InverleithRow$count <- InverleithRow$channel_1 + InverleithRow$channel_2
#create edge ID
InverleithRow$edge_id <- rep("26281", nrow(InverleithRow))
#check data
InverleithRow_plot <- subset(InverleithRow, day >= 182 & day <= 365 & year == 2015)
plot(InverleithRow_plot$day, InverleithRow_plot$count, xlab = "day", ylab= "count")
title("InverleithRow")
dim(InverleithRow_plot)


###LondonRoad
#get data from last section 
LondonRoad <- read.csv("33londonroad.csv", sep=',', header=T)
#format into POSlt
LondonRoad$date <- format(lubridate::dmy(LondonRoad$date),"%d/%m/%Y")
#set time
LondonRoad$date <- strptime(LondonRoad$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
LondonRoad$year <- year(as.POSIXlt(LondonRoad$date, format="%d/%m/%Y"))
#month vector 
LondonRoad$month <- month(as.POSIXlt(LondonRoad$date, format="%d/%m/%Y"))
# day vector 
LondonRoad$day <- yday(as.POSIXlt(LondonRoad$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(LondonRoad)[colnames(LondonRoad) == 'time'] <- 'hour'
#add total count
LondonRoad$count <- LondonRoad$channel_1 + LondonRoad$channel_2
#create edge ID
LondonRoad$edge_id <- rep("596721", nrow(LondonRoad))
#check data
LondonRoad_plot <- subset(LondonRoad, day >= 182 & day <= 365 & year == 2015)
plot(LondonRoad_plot$day, LondonRoad_plot$count, xlab = "day", ylab= "count")
title("LondonRoad")
dim(LondonRoad_plot)

#Nicolson Street 
Nicolson <- read.csv("34nicolsonstreet.csv", sep=',', header=T)
#format into POSlt
Nicolson$date <- format(lubridate::dmy(Nicolson$date),"%d/%m/%Y")
#set time
Nicolson$date <- strptime(Nicolson$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
Nicolson$year <- year(as.POSIXlt(Nicolson$date, format="%d/%m/%Y"))
#month vector 
Nicolson$month <- month(as.POSIXlt(Nicolson$date, format="%d/%m/%Y"))
# day vector 
Nicolson$day <- yday(as.POSIXlt(Nicolson$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(Nicolson)[colnames(Nicolson) == 'time'] <- 'hour'	
#add total count
Nicolson$count <- Nicolson$channel_1 + Nicolson$channel_2
#create edge ID
Nicolson$edge_id <- rep("72555", nrow(Nicolson))
#check data
Nicolson_plot <- subset(Nicolson, day >= 182 & day <= 365 & year == 2015)
plot(Nicolson_plot$day, Nicolson_plot$count, xlab = "day", ylab= "count")
title("Nicolson")
dim(Nicolson_plot)

###QueensFerryRoad
#get data from last section 
QueensFerryRoad <- read.csv("35queensferryroad.csv", sep=',', header=T)
#format into POSlt
QueensFerryRoad$date <- format(lubridate::dmy(QueensFerryRoad$date),"%d/%m/%Y")
#set time
QueensFerryRoad$date <- strptime(QueensFerryRoad$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
QueensFerryRoad$year <- year(as.POSIXlt(QueensFerryRoad$date, format="%d/%m/%Y"))
#month vector 
QueensFerryRoad$month <- month(as.POSIXlt(QueensFerryRoad$date, format="%d/%m/%Y"))
# day vector 
QueensFerryRoad$day <- yday(as.POSIXlt(QueensFerryRoad$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(QueensFerryRoad)[colnames(QueensFerryRoad) == 'time'] <- 'hour'	
#add total count
QueensFerryRoad$count <- QueensFerryRoad$channel_1 + QueensFerryRoad$channel_2
#create edge ID
QueensFerryRoad$edge_id <- rep("552911", nrow(QueensFerryRoad))
#check data
QueensFerryRoad_plot <- subset(QueensFerryRoad, day >= 182 & day <= 365 & year == 2015)
plot(QueensFerryRoad_plot$day, QueensFerryRoad_plot$count, xlab = "day", ylab= "count")
title("QueensFerryRoad")
dim(QueensFerryRoad_plot)


###RaeBurnPlace
#get data from last section 
RaeBurnPlace <- read.csv("36raeburnplace.csv", sep=',', header=T)
#format into POSlt
RaeBurnPlace$date <- format(lubridate::dmy(RaeBurnPlace$date),"%d/%m/%Y")
#set time
RaeBurnPlace$date <- strptime(RaeBurnPlace$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
RaeBurnPlace$year <- year(as.POSIXlt(RaeBurnPlace$date, format="%d/%m/%Y"))
#month vector 
RaeBurnPlace$month <- month(as.POSIXlt(RaeBurnPlace$date, format="%d/%m/%Y"))
# day vector 
RaeBurnPlace$day <- yday(as.POSIXlt(RaeBurnPlace$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(RaeBurnPlace)[colnames(RaeBurnPlace) == 'time'] <- 'hour'	
#add total count
RaeBurnPlace$count <- RaeBurnPlace$channel_1 + RaeBurnPlace$channel_2
#create edge ID
RaeBurnPlace$edge_id <- rep("695750", nrow(RaeBurnPlace))
#check data
RaeBurnPlace_plot <- subset(RaeBurnPlace, day >= 182 & day <= 365 & year == 2015)
plot(RaeBurnPlace_plot$day, RaeBurnPlace_plot$count, xlab = "day", ylab= "count")
title("RaeBurnPlace")
dim(RaeBurnPlace_plot)

###WhiteHouseLoan
#get data from last section 
WhiteHouseLoan <- read.csv("37whitehouseloan.csv", sep=',', header=T)
#format into POSlt
WhiteHouseLoan$date <- format(lubridate::dmy(WhiteHouseLoan$date),"%d/%m/%Y")
#set time
WhiteHouseLoan$date <- strptime(WhiteHouseLoan$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
WhiteHouseLoan$year <- year(as.POSIXlt(WhiteHouseLoan$date, format="%d/%m/%Y"))
#month vector 
WhiteHouseLoan$month <- month(as.POSIXlt(WhiteHouseLoan$date, format="%d/%m/%Y"))
# day vector 
WhiteHouseLoan$day <- yday(as.POSIXlt(WhiteHouseLoan$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(WhiteHouseLoan)[colnames(WhiteHouseLoan) == 'time'] <- 'hour'
#add total count
WhiteHouseLoan$count <- WhiteHouseLoan$channel_1 + WhiteHouseLoan$channel_2
#create edge ID
WhiteHouseLoan$edge_id <- rep("757408", nrow(WhiteHouseLoan))
#check data
WhiteHouseLoan_plot <- subset(WhiteHouseLoan, day >= 182 & day <= 365 & year == 2015)
plot(WhiteHouseLoan_plot$day, WhiteHouseLoan_plot$count, xlab = "day", ylab= "count")
title("WhiteHouseLoan")
dim(WhiteHouseLoan_plot)

###BruntsfieldNorth
#get data from last section 
BruntsfieldNorth <- read.csv("38bruntsfieldplacenorthside.csv", sep=',', header=T)
#format into POSlt
BruntsfieldNorth$date <- format(lubridate::dmy(BruntsfieldNorth$date),"%d/%m/%Y")
#set time
BruntsfieldNorth$date <- strptime(BruntsfieldNorth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
BruntsfieldNorth$year <- year(as.POSIXlt(BruntsfieldNorth$date, format="%d/%m/%Y"))
#month vector 
BruntsfieldNorth$month <- month(as.POSIXlt(BruntsfieldNorth$date, format="%d/%m/%Y"))
# day vector 
BruntsfieldNorth$day <- yday(as.POSIXlt(BruntsfieldNorth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(BruntsfieldNorth)[colnames(BruntsfieldNorth) == 'time'] <- 'hour'
#add total count
BruntsfieldNorth$count <- BruntsfieldNorth$channel_1 + BruntsfieldNorth$channel_2
#not created edge id here becasue merged Bruntsfield object will be final merger 
#check data
BruntsfieldNorth_plot <- subset(BruntsfieldNorth, day >= 182 & day <= 365 & year == 2015)
plot(BruntsfieldNorth_plot$day, BruntsfieldNorth_plot$count, xlab = "day", ylab= "count")
title("BruntsfieldNorth")
dim(BruntsfieldNorth_plot)

###BruntsfieldSouth
#get data from last section 
BruntsfieldSouth <- read.csv("39bruntsfieldplacesouthside.csv", sep=',', header=T)
#format into POSlt
BruntsfieldSouth$date <- format(lubridate::dmy(BruntsfieldSouth$date),"%d/%m/%Y")
#set time
BruntsfieldSouth$date <- strptime(BruntsfieldSouth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
BruntsfieldSouth$year <- year(as.POSIXlt(BruntsfieldSouth$date, format="%d/%m/%Y"))
#month vector 
BruntsfieldSouth$month <- month(as.POSIXlt(BruntsfieldSouth$date, format="%d/%m/%Y"))
# day vector 
BruntsfieldSouth$day <- yday(as.POSIXlt(BruntsfieldSouth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(BruntsfieldSouth)[colnames(BruntsfieldSouth) == 'time'] <- 'hour'
#add total count
BruntsfieldSouth$count <- BruntsfieldSouth$channel_1 + BruntsfieldSouth$channel_2
#not created edge id here becasue merged Bruntsfield object will be final merger 
#check data
BruntsfieldSouth_plot <- subset(BruntsfieldSouth, day >= 182 & day <= 365 & year == 2015)
plot(BruntsfieldSouth_plot$day, BruntsfieldSouth_plot$count, xlab = "day", ylab= "count")
title("BruntsfieldSouth")
dim(BruntsfieldSouth_plot)

###MayfieldNorth
#get data from last section 
MayfieldNorth <- read.csv("40mayfieldroadnorthbound.csv", sep=',', header=T)
#format into POSlt
MayfieldNorth$date <- format(lubridate::dmy(MayfieldNorth$date),"%d/%m/%Y")
#set time
MayfieldNorth$date <- strptime(MayfieldNorth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MayfieldNorth$year <- year(as.POSIXlt(MayfieldNorth$date, format="%d/%m/%Y"))
#month vector 
MayfieldNorth$month <- month(as.POSIXlt(MayfieldNorth$date, format="%d/%m/%Y"))
# day vector 
MayfieldNorth$day <- yday(as.POSIXlt(MayfieldNorth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MayfieldNorth)[colnames(MayfieldNorth) == 'time'] <- 'hour'
#add total count
MayfieldNorth$count <- MayfieldNorth$channel_1 + MayfieldNorth$channel_2
#not created edge id here becasue merged Mayfield object will be final merger 
#check data
MayfieldNorth_plot <- subset(MayfieldNorth, day >= 182 & day <= 365 & year == 2015)
plot(MayfieldNorth_plot$day, MayfieldNorth_plot$count, xlab = "day", ylab= "count")
title("MayfieldNorth")
dim(MayfieldNorth_plot)

###MayfieldSouth
#get data from last section 
MayfieldSouth <- read.csv("41mayfieldroadsouthbound.csv", sep=',', header=T)
#format into POSlt
MayfieldSouth$date <- format(lubridate::dmy(MayfieldSouth$date),"%d/%m/%Y")
#set time
MayfieldSouth$date <- strptime(MayfieldSouth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MayfieldSouth$year <- year(as.POSIXlt(MayfieldSouth$date, format="%d/%m/%Y"))
#month vector 
MayfieldSouth$month <- month(as.POSIXlt(MayfieldSouth$date, format="%d/%m/%Y"))
# day vector 
MayfieldSouth$day <- yday(as.POSIXlt(MayfieldSouth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MayfieldSouth)[colnames(MayfieldSouth) == 'time'] <- 'hour'
#add total count
MayfieldSouth$count <- MayfieldSouth$channel_1 + MayfieldSouth$channel_2
#not created edge id here becasue merged Mayfield object will be final merger 
#check data
MayfieldSouth_plot <- subset(MayfieldSouth, day >= 182 & day <= 365 & year == 2015)
plot(MayfieldSouth_plot$day, MayfieldSouth_plot$count, xlab = "day", ylab= "count")
title("MayfieldSouth")
dim(MayfieldSouth_plot)


###MelvilleMain
#get data from last section 
MelvilleMain <- read.csv("42melvilledrivemain (1).csv", sep=',', header=T)
#format into POSlt
MelvilleMain$date <- format(lubridate::dmy(MelvilleMain$date),"%d/%m/%Y")
#set time
MelvilleMain$date <- strptime(MelvilleMain$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MelvilleMain$year <- year(as.POSIXlt(MelvilleMain$date, format="%d/%m/%Y"))
#month vector 
MelvilleMain$month <- month(as.POSIXlt(MelvilleMain$date, format="%d/%m/%Y"))
# day vector 
MelvilleMain$day <- yday(as.POSIXlt(MelvilleMain$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MelvilleMain)[colnames(MelvilleMain) == 'time'] <- 'hour'
#add total count
MelvilleMain$count <- MelvilleMain$channel_1 + MelvilleMain$channel_2
#create edge ID
MelvilleMain$edge_id <- rep("591912", nrow(MelvilleMain))
#check data
MelvilleMain_plot <- subset(MelvilleMain, day >= 182 & day <= 365 & year == 2015)
plot(MelvilleMain_plot$day, MelvilleMain_plot$count, xlab = "day", ylab= "count")
title("MelvilleMain")
dim(MelvilleMain_plot)


###MelvilleSpur
#get data from last section 
MelvilleSpur <- read.csv("43melvilledrivespur.csv", sep=',', header=T)
#format into POSlt
MelvilleSpur$date <- format(lubridate::dmy(MelvilleSpur$date),"%d/%m/%Y")
#set time
MelvilleSpur$date <- strptime(MelvilleSpur$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MelvilleSpur$year <- year(as.POSIXlt(MelvilleSpur$date, format="%d/%m/%Y"))
#month vector 
MelvilleSpur$month <- month(as.POSIXlt(MelvilleSpur$date, format="%d/%m/%Y"))
# day vector 
MelvilleSpur$day <- yday(as.POSIXlt(MelvilleSpur$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MelvilleSpur)[colnames(MelvilleSpur) == 'time'] <- 'hour'
#add total count
MelvilleSpur$count <- MelvilleSpur$channel_1 + MelvilleSpur$channel_2
#create edge ID
MelvilleSpur$edge_id <- rep("76489", nrow(MelvilleSpur))
#check data
MelvilleSpur_plot <- subset(MelvilleSpur, day >= 182 & day <= 365 & year == 2015)
plot(MelvilleSpur_plot$day, MelvilleSpur_plot$count, xlab = "day", ylab= "count")
title("MelvilleSpur")
dim(MelvilleSpur_plot)

###MelvilleBusSouth
#get data from last section 
MelvilleBusSouth <- read.csv("44melvilledrivebus1southbound.csv", sep=',', header=T)
#format into POSlt
MelvilleBusSouth$date <- format(lubridate::dmy(MelvilleBusSouth$date),"%d/%m/%Y")
#set time
MelvilleBusSouth$date <- strptime(MelvilleBusSouth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MelvilleBusSouth$year <- year(as.POSIXlt(MelvilleBusSouth$date, format="%d/%m/%Y"))
#month vector 
MelvilleBusSouth$month <- month(as.POSIXlt(MelvilleBusSouth$date, format="%d/%m/%Y"))
# day vector 
MelvilleBusSouth$day <- yday(as.POSIXlt(MelvilleBusSouth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MelvilleBusSouth)[colnames(MelvilleBusSouth) == 'time'] <- 'hour'
#add total count
MelvilleBusSouth$count <- MelvilleBusSouth$channel_1 + MelvilleBusSouth$channel_2
#check data
MelvilleBusSouth_plot <- subset(MelvilleBusSouth, day >= 182 & day <= 365 & year == 2015)
plot(MelvilleBusSouth_plot$day, MelvilleBusSouth_plot$count, xlab = "day", ylab= "count")
title("MelvilleBusSouth")
dim(MelvilleBusSouth_plot)

###MelvilleBusNorth
#get data from last section 
MelvilleBusNorth <- read.csv("45melvilledrivebus2northbound.csv", sep=',', header=T)
#format into POSlt
MelvilleBusNorth$date <- format(lubridate::dmy(MelvilleBusNorth$date),"%d/%m/%Y")
#set time
MelvilleBusNorth$date <- strptime(MelvilleBusNorth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
MelvilleBusNorth$year <- year(as.POSIXlt(MelvilleBusNorth$date, format="%d/%m/%Y"))
#month vector 
MelvilleBusNorth$month <- month(as.POSIXlt(MelvilleBusNorth$date, format="%d/%m/%Y"))
# day vector 
MelvilleBusNorth$day <- yday(as.POSIXlt(MelvilleBusNorth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(MelvilleBusNorth)[colnames(MelvilleBusNorth) == 'time'] <- 'hour'
#add total count
MelvilleBusNorth$count <- MelvilleBusNorth$channel_1 + MelvilleBusNorth$channel_2
#check data
MelvilleBusNorth_plot <- subset(MelvilleBusNorth, day >= 182 & day <= 365 & year == 2015)
plot(MelvilleBusNorth_plot$day, MelvilleBusNorth_plot$count, xlab = "day", ylab= "count")
title("MelvilleBusNorth")
dim(MelvilleBusNorth_plot)

###FishwayCauseway
#get data from last section 
FishwayCauseway <- read.csv("46fishwivescauseway.csv", sep=',', header=T)
#format into POSlt
FishwayCauseway$date <- format(lubridate::dmy(FishwayCauseway$date),"%d/%m/%Y")
#set time
FishwayCauseway$date <- strptime(FishwayCauseway$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
FishwayCauseway$year <- year(as.POSIXlt(FishwayCauseway$date, format="%d/%m/%Y"))
#month vector 
FishwayCauseway$month <- month(as.POSIXlt(FishwayCauseway$date, format="%d/%m/%Y"))
# day vector 
FishwayCauseway$day <- yday(as.POSIXlt(FishwayCauseway$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(FishwayCauseway)[colnames(FishwayCauseway) == 'time'] <- 'hour'
#add total count
FishwayCauseway$count <- FishwayCauseway$channel_1 + FishwayCauseway$channel_2
#create edge ID
FishwayCauseway$edge_id <- rep("138971", nrow(FishwayCauseway))
#check data
FishwayCauseway_plot <- subset(FishwayCauseway, day >= 182 & day <= 365 & year == 2015)
plot(FishwayCauseway_plot$day, FishwayCauseway_plot$count, xlab = "day", ylab= "count")
title("FishwayCauseway")
dim(FishwayCauseway_plot)

###InverleithPark
#get data from last section 
InverleithPark <- read.csv("47inverleithpark.csv", sep=',', header=T)
#format into POSlt
InverleithPark$date <- format(lubridate::dmy(InverleithPark$date),"%d/%m/%Y")
#set time
InverleithPark$date <- strptime(InverleithPark$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
InverleithPark$year <- year(as.POSIXlt(InverleithPark$date, format="%d/%m/%Y"))
#month vector 
InverleithPark$month <- month(as.POSIXlt(InverleithPark$date, format="%d/%m/%Y"))
# day vector 
InverleithPark$day <- yday(as.POSIXlt(InverleithPark$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(InverleithPark)[colnames(InverleithPark) == 'time'] <- 'hour'
#add total count
InverleithPark$count <- InverleithPark$channel_1 + InverleithPark$channel_2
#create edge ID
InverleithPark$edge_id <- rep("599521", nrow(InverleithPark))
#check data
InverleithPark_plot <- subset(InverleithPark, day >= 182 & day <= 365 & year == 2015)
plot(InverleithPark_plot$day, InverleithPark_plot$count, xlab = "day", ylab= "count")
title("InverleithPark")
dim(InverleithPark_plot)


###CrewRoadSouth
#get data from last section 
CrewRoadSouth <- read.csv("48creweroadsouth.csv", sep=',', header=T)
#format into POSlt
CrewRoadSouth$date <- format(lubridate::dmy(CrewRoadSouth$date),"%d/%m/%Y")
#set time
CrewRoadSouth$date <- strptime(CrewRoadSouth$date, format = "%d/%m/%Y", tz = "GMT")
#year vec
CrewRoadSouth$year <- year(as.POSIXlt(CrewRoadSouth$date, format="%d/%m/%Y"))
#month vector 
CrewRoadSouth$month <- month(as.POSIXlt(CrewRoadSouth$date, format="%d/%m/%Y"))
# day vector 
CrewRoadSouth$day <- yday(as.POSIXlt(CrewRoadSouth$date, format = "%d/%m/%Y", tz = "GMT"))
#rename time to hour 
colnames(CrewRoadSouth)[colnames(CrewRoadSouth) == 'time'] <- 'hour'
#add total count
CrewRoadSouth$count <- CrewRoadSouth$channel_1 + CrewRoadSouth$channel_2
#create edge ID
CrewRoadSouth$edge_id <- rep("2221", nrow(CrewRoadSouth))
#check data
CrewRoadSouth_plot <- subset(CrewRoadSouth, day >= 182 & day <= 365 & year == 2015)
plot(CrewRoadSouth_plot$day, CrewRoadSouth_plot$count, xlab = "day", ylab= "count")
title("CrewRoadSouth")
dim(CrewRoadSouth_plot)


########################Merge Counters That located at same place in space 

#Merge two Bruntsfield because two counters 
Bruntsfield <- aggregate(count ~ year + month + day + hour, data = rbind(BruntsfieldSouth, BruntsfieldNorth), FUN = sum)
Bruntsfield$edge_id <- rep("733624", nrow(Bruntsfield))


#Merge Two Mayfield becaues two counters at same place 
Mayfield <- aggregate(count ~ year + month + day + hour, data = rbind(MayfieldSouth, MayfieldNorth), FUN = sum)
Mayfield$edge_id <- rep("428814", nrow(Mayfield))


#Merge two melville bus because two counters at some place 
MelvilleBus <- aggregate(count ~ year + month + day + hour, data = rbind(MelvilleBusSouth, MelvilleBusNorth), FUN = sum)
MelvilleBus$edge_id <- rep("428817", nrow(MelvilleBus))


#connect all others with main 
trips_connected <- plyr:::rbind.fill(RST, NMWE1, RoseburnPark, StraitonPath, StenhouseDrive, HarrisonPark, 
                               CorstorphineRoad, DalryRoad, DundeeStreet, InverleithRow, Nicolson, LondonRoad, QueensFerryRoad, RaeBurnPlace, WhiteHouseLoan, 
                               MelvilleMain, MelvilleSpur, FishwayCauseway, InverleithPark, CrewRoadSouth)
Bike_Counts <- subset(trips_connected, select =c(year, month, day, hour, count, edge_id))

				
#the six created here are 
#Brunt_Counts, May_Counts, MelvilleBus_Counts, RST_Counts, Bike_Counts
 #ut out study dates 

Brunt_Study <- subset(Bruntsfield, day >= 182 & day <= 365 & year == 2015)
May_Study <- subset(Mayfield, day >= 182 & day <= 365 & year == 2015)
MelvilleBus_Study <- subset(MelvilleBus, day >= 182 & day <= 365 & year == 2015)
Bike_Counts_Study <- subset(Bike_Counts, day >= 182 & day <= 365 & year == 2015)

bike_counts <- rbind(Brunt_Study, May_Study, MelvilleBus_Study, Bike_Counts_Study)

#check size, should be equal to the number of hours in the study period. Except porobello, that will be omotted (so will Morrison)
y <- bike_counts$edge_id
y <- table(y)
y

#write file 
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
write.csv(bike_counts, "single_point_counts_for_generic_model.csv")

###choosing the counters and dates 
#2015 strava data only valid after july - seperate bike counts by 2015 and after july 1
Bike_Counts_Study_Find <- subset(bike_counts, day >= 182 & day <= 365 & year == 2015)
library(ggplot2)
plot <- ggplot(Bike_Counts_Study_Find, aes(day, count))

plot + geom_bar(colour = "dark grey", fill = "tomato", stat = "identity") + 
  ggtitle("Edinburgh Bike Counts 1 July - 31 December 2015") + 
  geom_vline(xintercept = 200, colour = "tomato", alpha = .7, linetype = "dashed") + 
  geom_vline(xintercept = 220, colour = "tomato", alpha = .7, linetype = "dashed") + 
  geom_vline(xintercept = 284, colour = "tomato", alpha = .7, linetype = "dashed") + 
  geom_vline(xintercept = 290, colour = "tomato", alpha = .7, linetype = "dashed") +
  geom_vline(xintercept = 249, colour = "deepskyblue1", alpha = .7, linetype = "dashed") + 
  ylab("Counts")+
  xlab("Day of Year") 
  
  
  
#strava hist 
setwd("D:\\Strava Scotland\\Strava Scootland 2015")
s <- read.csv("Generic_Model_Dataset.csv", sep= ',', header = T)

Bike_Counts_Study_Find <- subset(s, day >= 182 & day <= 365 & year == 2015)
library(ggplot2)
plot <- ggplot(Bike_Counts_Study_Find, aes(day, total_activity_count))

plot + geom_bar(colour = "dark grey", fill = "tomato", stat = "identity") + 
  geom_vline(xintercept = 249, colour = "deepskyblue1", alpha = .7, linetype = "dashed") + 
  ggtitle("Edinburgh Bike Counts 1 July - 31 December 2015") + 
  ylab("Strava Counts")+
  xlab("Day of Year") 

  

#######################weather
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\weather data")
weather <- read.csv("Edinburgh hourly weather.csv", sep=',', header = T)
library(lubridate)
#need an year, day, hour variable 
#day in included, need year and date 

#format into POSlt
weather$Date <- format(lubridate::dmy(weather$Date),"%d/%m/%Y")
#set time
weather$Date <- strptime(weather$Date, format = "%d/%m/%Y", tz = "GMT")
#year vec
weather$year <- year(as.POSIXlt(weather$Date, format="%d/%m/%Y"))
# day vector 
weather$day <- yday(as.POSIXlt(weather$Date, format = "%d/%m/%Y", tz = "GMT"))
#rewrite hour for ease 
colnames(weather)[colnames(weather) == 'Hour'] <- 'hour'
write.csv(weather, "Edinburgh hourly weather1.csv")

######################managine weather 
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\weather data")
weather <- read.csv("Edinburgh hourly weather1.csv", sep=',', header = T)
dim(weather)
#repalce trace with 0
weather$Hourly_Rainfall_Total_mm_[weather$Hourly_Rainfall_Total_mm_ == "tr"] <- 0
#subset data for study
weather<- subset(weather, select = c(Hourly_Mean_Windspeed_knots, Hourly_Total_Cloud_Cover_oktas, Hourly_Rainfall_Total_mm_, Hourly_Temperature_C, year, day, hour))
dim(weather)
#look for NAs 
which(is.na(weather))
which(weather == "n/a")
which(weather$Hourly_Temperature_C == "n/a")
which(weather$hour == "n/a")
which(weather$day == "n/a")
which(weather$year == "n/a")
dim(weather)
#extract study dates
weather_study <- subset(weather, day >= 182 & day <= 365 & year == 2015)

#write file 
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
write.csv(weather_study, "weather_for_genric_demand_model.csv")

#NBM

library(foreign)
library(ggplot2)
library(MASS)
library(dplyr)
library(QuantPsyc)
library(varhandle)


#read auto count, strava count, weather data 
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
t <- read.csv("single_point_counts_for_generic_model.csv", sep= ',', header = T)
#bring in weather again?
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
weather_study <- read.csv("weather_for_genric_demand_model.csv", sep= ',', header = T)

###############NBM for day hours between 6am and 8pm
#weatherAllDay <- subset(weather_study, hour >= 6 & hour <= 20)
#subset aggregate temp, windspeed, cloud coverage, and rainfall per day, fun mean
weather_study$Hourly_Temperature_C <- unfactor(weather_study$Hourly_Temperature_C)
weather_study$Hourly_Rainfall_Total_mm_ <- unfactor(weather_study$Hourly_Rainfall_Total_mm_)
weatherAllDay0a <- aggregate(cbind(Hourly_Temperature_C, Hourly_Mean_Windspeed_knots, Hourly_Total_Cloud_Cover_oktas, Hourly_Rainfall_Total_mm_) ~ day, data= weather_study, FUN = mean)
#select study hours 
#AD <- subset(t, hour >= 6 & hour <= 20)
xx <- c(182:199, 221:283, 291:365)
t <- subset(t, edge_id != 373370)
t <- subset(t, day != 249)
t <- subset(t, day %in% xx )
t <- aggregate(count ~ year + day, data = t, FUN = sum)
#add on average weather data  
AD <- merge(t, weatherAllDay0a, by = c("day"), all.y = FALSE)
AD2 <- na.omit(AD)

colnames(AD2)[colnames(AD2) == 'Hourly_Temperature_C'] <- 'Temperature_C'
colnames(AD2)[colnames(AD2) == 'Hourly_Rainfall_Total_mm_'] <- 'Rainfall_mm'
colnames(AD2)[colnames(AD2) == 'Hourly_Mean_Windspeed_knots'] <- 'Windspeed_knots'
colnames(AD2)[colnames(AD2) == 'Hourly_Total_Cloud_Cover_oktas'] <- 'Cloud_Coverage_oktas'

#check correlations again becasue do it 
t1 <- subset(AD2, select = c(Temperature_C, Rainfall_mm, Windspeed_knots, Cloud_Coverage_oktas))
t1$Temperature_C <- as.numeric(t1$Temperature_C)
t1$Rainfall_mm <- as.numeric(t1$Rainfall_mm)
t1$Windspeed_knots <- as.numeric(t1$Windspeed_knots)
t1$Cloud_Coverage_oktas <- as.numeric(t1$Cloud_Coverage_oktas)
cor(t1)

AD2$Temperature_C_Dummy <- ifelse(AD2$Temperature_C <= 5, "_less_than_5", 
                                         ifelse(AD2$Temperature_C <= 10 & AD2$Temperature_C > 5, "_5_to_10",
                                                ifelse(AD2$Temperature_C <= 15 & AD2$Temperature_C > 10, "_10_to_15",
                                                       ifelse(AD2$Temperature_C > 15, "greater_than_15", "na"))))

          
levels(AD2$Temperature_C_Dummy)["_less_than_5"] <- "_less_than_5"
AD2$Temperature_C_Dummy <- relevel(as.factor(AD2$Temperature_C_Dummy), ref = "_less_than_5")

##negative binommial model with bike lane, pop density, total activy count + 3 weather variables 
m1 <- glm.nb(count ~ Temperature_C_Dummy + Rainfall_mm + Windspeed_knots + Cloud_Coverage_oktas, data=AD2, link = log)
summary(m1)

m1.1 <- lm(count ~ Temperature_C_Dummy + Rainfall_mm + Windspeed_knots + Cloud_Coverage_oktas, data=AD2)
summary(m1.1)
other_est <- cbind(Estimate = coef(m1.1), confint(m1.1))
print(other_est)

#calcuate confidence intervals
est2 <- cbind(Estimate = coef(m1), confint(m1))
print(est2)
 
est1 <- cbind(Estimate = coef(m1.1), confint(m1.1))
print(est1)

#calcuate the IRR, or exponentiate the confidence intervals 
exp(est1)



library(foreign)
library(ggplot2)
library(MASS)
library(dplyr)
library(QuantPsyc)



#read auto count, strava count, weather data 
setwd("D:\\Strava Scotland\\Strava Scootland 2015")
s <- read.csv("Generic_Model_Dataset.csv", sep= ',', header = T)
#on road count data
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
t <- read.csv("single_point_counts_for_generic_model.csv", sep= ',', header = T)
#bring in weather 
setwd("D:\\Urban Transport MSc\\Mapping Ridership in Edinburgh Paper\\R Output")
sweather_study <- read.csv("weather_for_genric_demand_model.csv", sep= ',', header = T)

sweather_study$Hourly_Temperature_C <- unfactor(sweather_study$Hourly_Temperature_C)
sweather_study$Hourly_Rainfall_Total_mm_ <- unfactor(sweather_study$Hourly_Rainfall_Total_mm_)

#equalizing the number or hours/day for the study/ add zeros where missing in strava data

j <- merge(t, s, by = c("edge_id", "year", "day", "hour"), all.x = TRUE)
#repalce NAs in strava activity data with zero
j$total_activity_count[is.na(j$total_activity_count)] <- 0 
s <- subset(j, select = c(edge_id, total_activity_count, year, day, hour, minute))

s <- subset(s, edge_id != 373370)
t <- subset(t, edge_id != 373370)

###############NBM for day hours between 6am and 8pm
#weatherAllDay <- subset(weather_study, hour >= 6 & hour <= 20)
#subset aggregate temp, windspeed, cloud coverage, and rainfall per day, fun mean
sweatherAllDay0a <- aggregate(cbind(Hourly_Temperature_C, Hourly_Mean_Windspeed_knots, Hourly_Total_Cloud_Cover_oktas, Hourly_Rainfall_Total_mm_) ~ day, data= sweather_study, FUN = mean)


#cmobine RST counts 
#subset all edge ID corresponding to counts  for rodney street tunnel
RST_count <- subset(s, edge_id == "20832" | edge_id == "23800" )
nots <- subset(s, edge_id != "20832" & edge_id != "23800" )
nots <- subset(nots, select = c(total_activity_count, year, day, hour, edge_id))
dim(nots)
RST_Strava_Counts <- aggregate(total_activity_count ~ year+day+hour, data = RST_count, sum)
RST_Strava_Counts$edge_id <- rep("20832", nrow(RST_Strava_Counts))
dim(RST_Strava_Counts)
#look at x,y here bike counters w/ main + strava
s <- rbind(nots, RST_Strava_Counts)

dim(s)
dim(t)

sxx <- c(182:199, 221:283, 291:365)
SAD <- subset(s, day != 249)
SAD <- subset(SAD, day %in% sxx )
SAD <- aggregate(total_activity_count ~ year + day, data = SAD, FUN = sum)


SAD2 <- merge(SAD, sweatherAllDay0a, by = c("day"), all.x = TRUE)
SAD2 <- na.omit(SAD2)

colnames(SAD2)[colnames(SAD2) == 'Hourly_Temperature_C'] <- 'Temperature_C'
colnames(SAD2)[colnames(SAD2) == 'Hourly_Rainfall_Total_mm_'] <- 'Rainfall_mm'
colnames(SAD2)[colnames(SAD2) == 'Hourly_Mean_Windspeed_knots'] <- 'Windspeed_knots'
colnames(SAD2)[colnames(SAD2) == 'Hourly_Total_Cloud_Cover_oktas'] <- 'Cloud_Coverage_oktas'

#check correlations again becasue do it 
st1 <- subset(SAD2, select = c(Temperature_C, Rainfall_mm, Windspeed_knots, Cloud_Coverage_oktas))
st1$Temperature_C <- as.numeric(st1$Temperature_C)
st1$Rainfall_mm <- as.numeric(st1$Rainfall_mm)
st1$Windspeed_knots <- as.numeric(st1$Windspeed_knots)
st1$Cloud_Coverage_oktas <- as.numeric(st1$Cloud_Coverage_oktas)
which(is.na(st1))
cor(st1)



SAD2$Temperature_C_Dummy <- ifelse(SAD2$Temperature_C <= 5 & SAD2$Temperature_C > -5, "_less_than_5", 
                                         ifelse(SAD2$Temperature_C <= 10 & SAD2$Temperature_C > 5, "_5_to_10",
                                                ifelse(SAD2$Temperature_C <= 15 & SAD2$Temperature_C > 10, "_10_to_15",
                                                       ifelse( SAD2$Temperature_C <= 20 & SAD2$Temperature_C > 15, "greater_than_15", "na"))))


levels(SAD2$Temperature_C_Dummy)["_less_than_5"] <- "_less_than_5"
SAD2$Temperature_C_Dummy <- relevel(as.factor(SAD2$Temperature_C_Dummy), ref = "_less_than_5")

##negative binommial model with bike lane, pop density, total activy count + 3 weather variables 
m2 <- glm.nb(total_activity_count  ~ Temperature_C_Dummy + Rainfall_mm + Windspeed_knots + Cloud_Coverage_oktas, data=SAD2, link = log)
summary(m2)

m2.1 <- lm(total_activity_count ~ Temperature_C_Dummy + Rainfall_mm + Windspeed_knots + Cloud_Coverage_oktas, data=SAD2)
summary(m2.1)

#calcuate confidence intervals 
not_e_est <- cbind(Estimate = coef(m2), confint(m2))
print(not_e_est)
extra_sest <- cbind(Estimate = coef(m2.1), confint(m2.1))
print(extra_sest)

#calcuate the IRR, or exponentiate the confidence intervals 
exp(sest)

