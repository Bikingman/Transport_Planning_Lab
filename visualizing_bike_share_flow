

#visualizing flow of the Twin City Bike Share in R using stplanr


#thank you to the stplanr team for creating this package, and thank you Prof David McArthur at the UoG for exposing me to this work  
#https://cran.r-project.org/web/packages/stplanr/vignettes/introducing-stplanr.html
#https://cran.r-project.org/web/packages/stplanr/stplanr.pdf


#create desire lines 
library(sp)
library(stplanr)
library(maptools)
library(rgdal)
library(tmap)
library(foreign)

#worfflow 
#import a map 
#aggregate hires, eliminate trash 
#attach coordinates 
#generate text files for each route along osm links 
#split each link in string of text and add another colomn with number of hires 
#aggreagate number of hires per road link 
#export 

#1. import map 
setwd("D:\\Bike Share Analysis\\MN data\\minneapolis-saint-paul_minnesota.imposm-shapefiles")
network <- readOGR(dsn = ".", layer = "minneapolis-saint-paul-city-center-roads")

#2.a aggregate hires, eliminate trash
setwd("D:\\Bike Share Analysis\\Nice_ride_data_2015_season\\Nice_ride_data_2015_season")
bike_share_hires <- read.csv("Nice_ride_trip_history_2015_season.csv", sep = ",", header = T) 
bike_share_hires$hire <- 1 # add a number to aggregate
flow <- aggregate(hire ~ End.station.number + Start.station.number, data = bike_share_hires, FUN = sum)
ind <- which(with( flow, End.station.number == "NRHQ" | Start.station.number == "NRHQ" )) # remove NRHQ bc no coordinates for location 
ind # make sure 
f <- flow[ -ind, ] # remove from flow 

#2.b attach coordinates 
setwd("D:\\Bike Share Analysis\\Nice_ride_data_2015_season\\Nice_ride_data_2015_season\\location_data")
locations <- read.dbf("location_sf.dbf")

OD1 <- merge(f, locations, by.x = "End.station.number", by.y = "Terminal")
OD2 <- merge(OD1, locations, by.x = "Start.station.number", by.y = "Terminal")
OD3 <- OD2[c(1:3, 5:6, 9:10)]

#3. generate text files for each route along osm links 
#stuck here. need to find a command that will return a string of links in a single cell. These then partitioned and the weights added. 
# so far the follow commands seem like they will NOT work # this may not be true, need to better understand stplanr
# 1. viaroutes::stplanr -

