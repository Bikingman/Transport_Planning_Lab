//subway stations with 400m of bike lanes

[out:json][bbox:{{bbox}}][timeout:800];

	// determine set of train stations near cyclelanes
	(
	  // get cycle route relatoins
	  relation[route=bicycle];
	  way[highway=cycleway];
	  way[highway=path][bicycle=designated]
	)->.cycleways; // put them into the set "cycleways"
	 
	// determine set of stations
	(
	  node["station"="subway"];
	  way["station"="subway"];
	  relation["station"="subway"]
	)->.stations; // put them into the set "stations"
	  
	// determine set of stations near cycleways
	(
	  node.stations(around.cycleways:400);
	  way.stations(around.cycleways:400);
	  rel.stations(around.cycleways:400);
	)->.stationsNearcycleways; // put them into the set "stationsNearcycleways"

	// determine stations near cycleways
	(.stationsNearcycleways;);

	// return node, ways, relations as determined above
	out geom meta;










// locate multiple ammenties

[out:json][timeout:25000];
// gather results
(
  // query part for: “amenity=drinking_water”
  node["amenity"="cafe"]({{bbox}});
  node["amenity"="restaurant"]({{bbox}});
  node["amenity"="pub"]({{bbox}});
  node["amenity"="coffee"]({{bbox}});
  node["building"="university"]({{bbox}});
  node["building"="college"]({{bbox}});
  node["office"]({{bbox}});
  
);
// print results
out meta;
>;











//locate highways (roads without ped access)

<osm-script output="json" timeout="25">
  <!-- gather results -->
  <union>
    <!-- query part for: “highway=* and highway!=footway and highway!=pedestrian and "-highway"!=path” -->
    <query type="node">
      <has-kv k="highway"/>
      <has-kv k="highway" modv="not" v="footway"/>
      <has-kv k="highway" modv="not" v="pedestrian"/>
      <has-kv k="-highway" modv="not" v="path"/>
      <bbox-query {{bbox}}/>
    </query>
    <query type="way">
      <has-kv k="highway"/>
      <has-kv k="highway" modv="not" v="footway"/>
      <has-kv k="highway" modv="not" v="pedestrian"/>
      <has-kv k="-highway" modv="not" v="path"/>
      <bbox-query {{bbox}}/>
    </query>
    <query type="relation">
      <has-kv k="highway"/>
      <has-kv k="highway" modv="not" v="footway"/>
      <has-kv k="highway" modv="not" v="pedestrian"/>
      <has-kv k="-highway" modv="not" v="path"/>
      <bbox-query {{bbox}}/>
    </query>
  </union>
  <!-- print results -->
  <print mode="body"/>
  <recurse type="down"/>
  <print mode="skeleton" order="quadtile"/>
</osm-script>


